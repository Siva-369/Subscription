{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\SIVANAND\\\\OneDrive - Capgemini\\\\Desktop\\\\Subscribe\\\\frontend\\\\src\\\\LoginScreen.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { View, TextInput, Button, Text } from 'react-native';\nimport axios from 'axios';\nimport { setAuthToken } from '../utils/axiosConfig';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst LoginScreen = _ref => {\n  _s();\n  let {\n    navigation\n  } = _ref;\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [error, setError] = useState('');\n  const handleLogin = async () => {\n    try {\n      const response = await axios.post('http://your-backend-url/api/auth/login', {\n        email,\n        password\n      });\n      setAuthToken(response.data.token); // Set token\n      navigation.navigate('Dashboard');\n    } catch (err) {\n      setError('Invalid credentials');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(View, {\n    children: [/*#__PURE__*/_jsxDEV(TextInput, {\n      placeholder: \"Email\",\n      value: email,\n      onChangeText: setEmail\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(TextInput, {\n      placeholder: \"Password\",\n      secureTextEntry: true,\n      value: password,\n      onChangeText: setPassword\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 13\n    }, this), error ? /*#__PURE__*/_jsxDEV(Text, {\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 22\n    }, this) : null, /*#__PURE__*/_jsxDEV(Button, {\n      title: \"Login\",\n      onPress: handleLogin\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      title: \"Sign Up\",\n      onPress: () => navigation.navigate('Signup')\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 9\n  }, this);\n};\n_s(LoginScreen, \"Mo0y3DcwABf2JuX2Ot7Vabl3QMk=\");\n_c = LoginScreen;\nexport default LoginScreen;\nvar _c;\n$RefreshReg$(_c, \"LoginScreen\");","map":{"version":3,"names":["React","useState","View","TextInput","Button","Text","axios","setAuthToken","jsxDEV","_jsxDEV","LoginScreen","_ref","_s","navigation","email","setEmail","password","setPassword","error","setError","handleLogin","response","post","data","token","navigate","err","children","placeholder","value","onChangeText","fileName","_jsxFileName","lineNumber","columnNumber","secureTextEntry","title","onPress","_c","$RefreshReg$"],"sources":["C:/Users/SIVANAND/OneDrive - Capgemini/Desktop/Subscribe/frontend/src/LoginScreen.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { View, TextInput, Button, Text } from 'react-native';\r\nimport axios from 'axios';\r\nimport { setAuthToken } from '../utils/axiosConfig';\r\n\r\nconst LoginScreen = ({ navigation }) => {\r\n    const [email, setEmail] = useState('');\r\n    const [password, setPassword] = useState('');\r\n    const [error, setError] = useState('');\r\n\r\n    const handleLogin = async () => {\r\n        try {\r\n            const response = await axios.post('http://your-backend-url/api/auth/login', { email, password });\r\n            setAuthToken(response.data.token); // Set token\r\n            navigation.navigate('Dashboard');\r\n        } catch (err) {\r\n            setError('Invalid credentials');\r\n        }\r\n    };\r\n\r\n    return (\r\n        <View>\r\n            <TextInput placeholder=\"Email\" value={email} onChangeText={setEmail} />\r\n            <TextInput placeholder=\"Password\" secureTextEntry value={password} onChangeText={setPassword} />\r\n            {error ? <Text>{error}</Text> : null}\r\n            <Button title=\"Login\" onPress={handleLogin} />\r\n            <Button title=\"Sign Up\" onPress={() => navigation.navigate('Signup')} />\r\n        </View>\r\n    );\r\n};\r\n\r\nexport default LoginScreen;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,IAAI,EAAEC,SAAS,EAAEC,MAAM,EAAEC,IAAI,QAAQ,cAAc;AAC5D,OAAOC,KAAK,MAAM,OAAO;AACzB,SAASC,YAAY,QAAQ,sBAAsB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEpD,MAAMC,WAAW,GAAGC,IAAA,IAAoB;EAAAC,EAAA;EAAA,IAAnB;IAAEC;EAAW,CAAC,GAAAF,IAAA;EAC/B,MAAM,CAACG,KAAK,EAAEC,QAAQ,CAAC,GAAGd,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACe,QAAQ,EAAEC,WAAW,CAAC,GAAGhB,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACiB,KAAK,EAAEC,QAAQ,CAAC,GAAGlB,QAAQ,CAAC,EAAE,CAAC;EAEtC,MAAMmB,WAAW,GAAG,MAAAA,CAAA,KAAY;IAC5B,IAAI;MACA,MAAMC,QAAQ,GAAG,MAAMf,KAAK,CAACgB,IAAI,CAAC,wCAAwC,EAAE;QAAER,KAAK;QAAEE;MAAS,CAAC,CAAC;MAChGT,YAAY,CAACc,QAAQ,CAACE,IAAI,CAACC,KAAK,CAAC,CAAC,CAAC;MACnCX,UAAU,CAACY,QAAQ,CAAC,WAAW,CAAC;IACpC,CAAC,CAAC,OAAOC,GAAG,EAAE;MACVP,QAAQ,CAAC,qBAAqB,CAAC;IACnC;EACJ,CAAC;EAED,oBACIV,OAAA,CAACP,IAAI;IAAAyB,QAAA,gBACDlB,OAAA,CAACN,SAAS;MAACyB,WAAW,EAAC,OAAO;MAACC,KAAK,EAAEf,KAAM;MAACgB,YAAY,EAAEf;IAAS;MAAAgB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACvEzB,OAAA,CAACN,SAAS;MAACyB,WAAW,EAAC,UAAU;MAACO,eAAe;MAACN,KAAK,EAAEb,QAAS;MAACc,YAAY,EAAEb;IAAY;MAAAc,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,EAC/FhB,KAAK,gBAAGT,OAAA,CAACJ,IAAI;MAAAsB,QAAA,EAAET;IAAK;MAAAa,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAO,CAAC,GAAG,IAAI,eACpCzB,OAAA,CAACL,MAAM;MAACgC,KAAK,EAAC,OAAO;MAACC,OAAO,EAAEjB;IAAY;MAAAW,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eAC9CzB,OAAA,CAACL,MAAM;MAACgC,KAAK,EAAC,SAAS;MAACC,OAAO,EAAEA,CAAA,KAAMxB,UAAU,CAACY,QAAQ,CAAC,QAAQ;IAAE;MAAAM,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACtE,CAAC;AAEf,CAAC;AAACtB,EAAA,CAxBIF,WAAW;AAAA4B,EAAA,GAAX5B,WAAW;AA0BjB,eAAeA,WAAW;AAAC,IAAA4B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}