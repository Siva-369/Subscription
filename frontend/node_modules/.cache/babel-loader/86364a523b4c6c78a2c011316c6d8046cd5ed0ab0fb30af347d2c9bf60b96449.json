{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\SIVANAND\\\\OneDrive - Capgemini\\\\Desktop\\\\Subscribe\\\\frontend\\\\src\\\\PaymentScreen.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { View, Text, Button, FlatList, TextInput, Alert } from 'react-native';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PaymentScreen = () => {\n  _s();\n  const [payments, setPayments] = useState([]);\n  const [amount, setAmount] = useState('');\n\n  // Replace this URL with your Vercel backend URL\n  const API_URL = 'https://subscription-cyan.vercel.app/api/payments';\n  const fetchPayments = async () => {\n    try {\n      const response = await axios.get(`${API_URL}/history`);\n      setPayments(response.data);\n    } catch (error) {\n      console.error('Error fetching payment history:', error);\n      Alert.alert('Error', 'Failed to load payment history');\n    }\n  };\n  const handleAddPayment = async subscriptionId => {\n    try {\n      await axios.post(API_URL, {\n        subscriptionId,\n        amount\n      });\n      setAmount(''); // Clear input after successful payment\n      fetchPayments(); // Refresh payment history\n      Alert.alert('Success', 'Payment added successfully');\n    } catch (error) {\n      console.error('Error adding payment:', error);\n      Alert.alert('Error', 'Failed to add payment');\n    }\n  };\n  useEffect(() => {\n    fetchPayments();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(View, {\n    style: {\n      padding: 20\n    },\n    children: [/*#__PURE__*/_jsxDEV(Text, {\n      style: {\n        fontSize: 18,\n        fontWeight: 'bold',\n        marginBottom: 10\n      },\n      children: \"Your Payment History\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(FlatList, {\n      data: payments,\n      keyExtractor: item => item._id,\n      renderItem: _ref => {\n        let {\n          item\n        } = _ref;\n        return /*#__PURE__*/_jsxDEV(Text, {\n          children: [item.subscriptionId.name, \" - $\", item.amount, \" on \", new Date(item.date).toLocaleDateString()]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 21\n        }, this);\n      },\n      ListEmptyComponent: /*#__PURE__*/_jsxDEV(Text, {\n        children: \"No payment history available.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 37\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(TextInput, {\n      placeholder: \"Enter amount\",\n      value: amount,\n      onChangeText: setAmount,\n      keyboardType: \"numeric\",\n      style: {\n        borderWidth: 1,\n        borderColor: '#ccc',\n        padding: 10,\n        marginVertical: 10,\n        borderRadius: 5\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      title: \"Add Payment\",\n      onPress: () => handleAddPayment('subscription_id_here')\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 13\n    }, this), \" \"]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 9\n  }, this);\n};\n_s(PaymentScreen, \"ZpTDU8Ybhj7u7CJQaJq9zn5GpLE=\");\n_c = PaymentScreen;\nexport default PaymentScreen;\nvar _c;\n$RefreshReg$(_c, \"PaymentScreen\");","map":{"version":3,"names":["React","useEffect","useState","View","Text","Button","FlatList","TextInput","Alert","axios","jsxDEV","_jsxDEV","PaymentScreen","_s","payments","setPayments","amount","setAmount","API_URL","fetchPayments","response","get","data","error","console","alert","handleAddPayment","subscriptionId","post","style","padding","children","fontSize","fontWeight","marginBottom","fileName","_jsxFileName","lineNumber","columnNumber","keyExtractor","item","_id","renderItem","_ref","name","Date","date","toLocaleDateString","ListEmptyComponent","placeholder","value","onChangeText","keyboardType","borderWidth","borderColor","marginVertical","borderRadius","title","onPress","_c","$RefreshReg$"],"sources":["C:/Users/SIVANAND/OneDrive - Capgemini/Desktop/Subscribe/frontend/src/PaymentScreen.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { View, Text, Button, FlatList, TextInput, Alert } from 'react-native';\r\nimport axios from 'axios';\r\n\r\nconst PaymentScreen = () => {\r\n    const [payments, setPayments] = useState([]);\r\n    const [amount, setAmount] = useState('');\r\n    \r\n    // Replace this URL with your Vercel backend URL\r\n    const API_URL = 'https://subscription-cyan.vercel.app/api/payments';\r\n\r\n    const fetchPayments = async () => {\r\n        try {\r\n            const response = await axios.get(`${API_URL}/history`);\r\n            setPayments(response.data);\r\n        } catch (error) {\r\n            console.error('Error fetching payment history:', error);\r\n            Alert.alert('Error', 'Failed to load payment history');\r\n        }\r\n    };\r\n\r\n    const handleAddPayment = async (subscriptionId) => {\r\n        try {\r\n            await axios.post(API_URL, { subscriptionId, amount });\r\n            setAmount(''); // Clear input after successful payment\r\n            fetchPayments(); // Refresh payment history\r\n            Alert.alert('Success', 'Payment added successfully');\r\n        } catch (error) {\r\n            console.error('Error adding payment:', error);\r\n            Alert.alert('Error', 'Failed to add payment');\r\n        }\r\n    };\r\n\r\n    useEffect(() => {\r\n        fetchPayments();\r\n    }, []);\r\n\r\n    return (\r\n        <View style={{ padding: 20 }}>\r\n            <Text style={{ fontSize: 18, fontWeight: 'bold', marginBottom: 10 }}>Your Payment History</Text>\r\n            <FlatList\r\n                data={payments}\r\n                keyExtractor={(item) => item._id}\r\n                renderItem={({ item }) => (\r\n                    <Text>\r\n                        {item.subscriptionId.name} - ${item.amount} on {new Date(item.date).toLocaleDateString()}\r\n                    </Text>\r\n                )}\r\n                ListEmptyComponent={<Text>No payment history available.</Text>}\r\n            />\r\n            <TextInput\r\n                placeholder=\"Enter amount\"\r\n                value={amount}\r\n                onChangeText={setAmount}\r\n                keyboardType=\"numeric\"\r\n                style={{\r\n                    borderWidth: 1,\r\n                    borderColor: '#ccc',\r\n                    padding: 10,\r\n                    marginVertical: 10,\r\n                    borderRadius: 5,\r\n                }}\r\n            />\r\n            <Button title=\"Add Payment\" onPress={() => handleAddPayment('subscription_id_here')} /> {/* Replace with actual logic */}\r\n        </View>\r\n    );\r\n};\r\n\r\nexport default PaymentScreen;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}