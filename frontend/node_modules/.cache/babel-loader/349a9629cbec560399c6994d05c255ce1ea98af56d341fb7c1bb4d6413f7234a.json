{"ast":null,"code":"import React,{useEffect,useState}from'react';import{View,Text,FlatList,Button}from'react-native';import axios from'axios';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const NotificationScreen=()=>{const[notifications,setNotifications]=useState([]);const fetchNotifications=async()=>{const response=await axios.get('https://your-backend-url/api/notifications');// Create this endpoint\nsetNotifications(response.data);};useEffect(()=>{fetchNotifications();},[]);return/*#__PURE__*/_jsxs(View,{children:[/*#__PURE__*/_jsx(Text,{children:\"Your Notifications\"}),/*#__PURE__*/_jsx(FlatList,{data:notifications,keyExtractor:item=>item._id,renderItem:_ref=>{let{item}=_ref;return/*#__PURE__*/_jsxs(View,{children:[/*#__PURE__*/_jsx(Text,{children:item.message}),/*#__PURE__*/_jsx(Button,{title:\"Mark as Read\",onPress:()=>{/* Logic to mark as read */}})]});}})]});};export default NotificationScreen;","map":{"version":3,"names":["React","useEffect","useState","View","Text","FlatList","Button","axios","jsx","_jsx","jsxs","_jsxs","NotificationScreen","notifications","setNotifications","fetchNotifications","response","get","data","children","keyExtractor","item","_id","renderItem","_ref","message","title","onPress"],"sources":["C:/Users/SIVANAND/OneDrive - Capgemini/Desktop/Subscribe/frontend/src/NotificationScreen.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { View, Text, FlatList, Button } from 'react-native';\r\nimport axios from 'axios';\r\n\r\nconst NotificationScreen = () => {\r\n    const [notifications, setNotifications] = useState([]);\r\n\r\n    const fetchNotifications = async () => {\r\n        const response = await axios.get('https://your-backend-url/api/notifications'); // Create this endpoint\r\n        setNotifications(response.data);\r\n    };\r\n\r\n    useEffect(() => {\r\n        fetchNotifications();\r\n    }, []);\r\n\r\n    return (\r\n        <View>\r\n            <Text>Your Notifications</Text>\r\n            <FlatList\r\n                data={notifications}\r\n                keyExtractor={(item) => item._id}\r\n                renderItem={({ item }) => (\r\n                    <View>\r\n                        <Text>{item.message}</Text>\r\n                        <Button title=\"Mark as Read\" onPress={() => {/* Logic to mark as read */}} />\r\n                    </View>\r\n                )}\r\n            />\r\n        </View>\r\n    );\r\n};\r\n\r\nexport default NotificationScreen;"],"mappings":"AAAA,MAAO,CAAAA,KAAK,EAAIC,SAAS,CAAEC,QAAQ,KAAQ,OAAO,CAClD,OAASC,IAAI,CAAEC,IAAI,CAAEC,QAAQ,CAAEC,MAAM,KAAQ,cAAc,CAC3D,MAAO,CAAAC,KAAK,KAAM,OAAO,CAAC,OAAAC,GAAA,IAAAC,IAAA,CAAAC,IAAA,IAAAC,KAAA,yBAE1B,KAAM,CAAAC,kBAAkB,CAAGA,CAAA,GAAM,CAC7B,KAAM,CAACC,aAAa,CAAEC,gBAAgB,CAAC,CAAGZ,QAAQ,CAAC,EAAE,CAAC,CAEtD,KAAM,CAAAa,kBAAkB,CAAG,KAAAA,CAAA,GAAY,CACnC,KAAM,CAAAC,QAAQ,CAAG,KAAM,CAAAT,KAAK,CAACU,GAAG,CAAC,4CAA4C,CAAC,CAAE;AAChFH,gBAAgB,CAACE,QAAQ,CAACE,IAAI,CAAC,CACnC,CAAC,CAEDjB,SAAS,CAAC,IAAM,CACZc,kBAAkB,CAAC,CAAC,CACxB,CAAC,CAAE,EAAE,CAAC,CAEN,mBACIJ,KAAA,CAACR,IAAI,EAAAgB,QAAA,eACDV,IAAA,CAACL,IAAI,EAAAe,QAAA,CAAC,oBAAkB,CAAM,CAAC,cAC/BV,IAAA,CAACJ,QAAQ,EACLa,IAAI,CAAEL,aAAc,CACpBO,YAAY,CAAGC,IAAI,EAAKA,IAAI,CAACC,GAAI,CACjCC,UAAU,CAAEC,IAAA,MAAC,CAAEH,IAAK,CAAC,CAAAG,IAAA,oBACjBb,KAAA,CAACR,IAAI,EAAAgB,QAAA,eACDV,IAAA,CAACL,IAAI,EAAAe,QAAA,CAAEE,IAAI,CAACI,OAAO,CAAO,CAAC,cAC3BhB,IAAA,CAACH,MAAM,EAACoB,KAAK,CAAC,cAAc,CAACC,OAAO,CAAEA,CAAA,GAAM,CAAC,4BAA6B,CAAE,CAAC,EAC3E,CAAC,EACT,CACL,CAAC,EACA,CAAC,CAEf,CAAC,CAED,cAAe,CAAAf,kBAAkB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}