{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\SIVANAND\\\\OneDrive - Capgemini\\\\Desktop\\\\Subscribe\\\\frontend\\\\src\\\\PaymentScreen.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { View, Text, Button, FlatList } from 'react-native';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PaymentScreen = () => {\n  _s();\n  const [payments, setPayments] = useState([]);\n  const [amount, setAmount] = useState('');\n  const fetchPayments = async () => {\n    const response = await axios.get('https://your-backend-url/api/payments/history');\n    setPayments(response.data);\n  };\n  const handleAddPayment = async subscriptionId => {\n    await axios.post('https://your-backend-url/api/payments', {\n      subscriptionId,\n      amount\n    });\n    fetchPayments(); // Refresh payment history\n  };\n  useEffect(() => {\n    fetchPayments();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(View, {\n    children: [/*#__PURE__*/_jsxDEV(Text, {\n      children: \"Your Payment History\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(FlatList, {\n      data: payments,\n      keyExtractor: item => item._id,\n      renderItem: _ref => {\n        let {\n          item\n        } = _ref;\n        return /*#__PURE__*/_jsxDEV(Text, {\n          children: [item.subscriptionId.name, \" - $\", item.amount, \" on \", new Date(item.date).toLocaleDateString()]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 21\n        }, this);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      title: \"Add Payment\",\n      onPress: () => handleAddPayment('subscription_id_here')\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 13\n    }, this), \" \"]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 9\n  }, this);\n};\n_s(PaymentScreen, \"ZpTDU8Ybhj7u7CJQaJq9zn5GpLE=\");\n_c = PaymentScreen;\nexport default PaymentScreen;\nvar _c;\n$RefreshReg$(_c, \"PaymentScreen\");","map":{"version":3,"names":["React","useEffect","useState","View","Text","Button","FlatList","axios","jsxDEV","_jsxDEV","PaymentScreen","_s","payments","setPayments","amount","setAmount","fetchPayments","response","get","data","handleAddPayment","subscriptionId","post","children","fileName","_jsxFileName","lineNumber","columnNumber","keyExtractor","item","_id","renderItem","_ref","name","Date","date","toLocaleDateString","title","onPress","_c","$RefreshReg$"],"sources":["C:/Users/SIVANAND/OneDrive - Capgemini/Desktop/Subscribe/frontend/src/PaymentScreen.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { View, Text, Button, FlatList } from 'react-native';\r\nimport axios from 'axios';\r\n\r\nconst PaymentScreen = () => {\r\n    const [payments, setPayments] = useState([]);\r\n    const [amount, setAmount] = useState('');\r\n\r\n    const fetchPayments = async () => {\r\n        const response = await axios.get('https://your-backend-url/api/payments/history');\r\n        setPayments(response.data);\r\n    };\r\n\r\n    const handleAddPayment = async (subscriptionId) => {\r\n        await axios.post('https://your-backend-url/api/payments', { subscriptionId, amount });\r\n        fetchPayments(); // Refresh payment history\r\n    };\r\n\r\n    useEffect(() => {\r\n        fetchPayments();\r\n    }, []);\r\n\r\n    return (\r\n        <View>\r\n            <Text>Your Payment History</Text>\r\n            <FlatList\r\n                data={payments}\r\n                keyExtractor={(item) => item._id}\r\n                renderItem={({ item }) => (\r\n                    <Text>{item.subscriptionId.name} - ${item.amount} on {new Date(item.date).toLocaleDateString()}</Text>\r\n                )}\r\n            />\r\n            <Button title=\"Add Payment\" onPress={() => handleAddPayment('subscription_id_here')} /> {/* Replace with actual logic */}\r\n        </View>\r\n    );\r\n};\r\n\r\nexport default PaymentScreen;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,SAASC,IAAI,EAAEC,IAAI,EAAEC,MAAM,EAAEC,QAAQ,QAAQ,cAAc;AAC3D,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,MAAMC,aAAa,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACxB,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACY,MAAM,EAAEC,SAAS,CAAC,GAAGb,QAAQ,CAAC,EAAE,CAAC;EAExC,MAAMc,aAAa,GAAG,MAAAA,CAAA,KAAY;IAC9B,MAAMC,QAAQ,GAAG,MAAMV,KAAK,CAACW,GAAG,CAAC,+CAA+C,CAAC;IACjFL,WAAW,CAACI,QAAQ,CAACE,IAAI,CAAC;EAC9B,CAAC;EAED,MAAMC,gBAAgB,GAAG,MAAOC,cAAc,IAAK;IAC/C,MAAMd,KAAK,CAACe,IAAI,CAAC,uCAAuC,EAAE;MAAED,cAAc;MAAEP;IAAO,CAAC,CAAC;IACrFE,aAAa,CAAC,CAAC,CAAC,CAAC;EACrB,CAAC;EAEDf,SAAS,CAAC,MAAM;IACZe,aAAa,CAAC,CAAC;EACnB,CAAC,EAAE,EAAE,CAAC;EAEN,oBACIP,OAAA,CAACN,IAAI;IAAAoB,QAAA,gBACDd,OAAA,CAACL,IAAI;MAAAmB,QAAA,EAAC;IAAoB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAM,CAAC,eACjClB,OAAA,CAACH,QAAQ;MACLa,IAAI,EAAEP,QAAS;MACfgB,YAAY,EAAGC,IAAI,IAAKA,IAAI,CAACC,GAAI;MACjCC,UAAU,EAAEC,IAAA;QAAA,IAAC;UAAEH;QAAK,CAAC,GAAAG,IAAA;QAAA,oBACjBvB,OAAA,CAACL,IAAI;UAAAmB,QAAA,GAAEM,IAAI,CAACR,cAAc,CAACY,IAAI,EAAC,MAAI,EAACJ,IAAI,CAACf,MAAM,EAAC,MAAI,EAAC,IAAIoB,IAAI,CAACL,IAAI,CAACM,IAAI,CAAC,CAACC,kBAAkB,CAAC,CAAC;QAAA;UAAAZ,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAO,CAAC;MAAA;IACxG;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACL,CAAC,eACFlB,OAAA,CAACJ,MAAM;MAACgC,KAAK,EAAC,aAAa;MAACC,OAAO,EAAEA,CAAA,KAAMlB,gBAAgB,CAAC,sBAAsB;IAAE;MAAAI,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,KAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACtF,CAAC;AAEf,CAAC;AAAChB,EAAA,CA/BID,aAAa;AAAA6B,EAAA,GAAb7B,aAAa;AAiCnB,eAAeA,aAAa;AAAC,IAAA6B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}