{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\SIVANAND\\\\OneDrive - Capgemini\\\\Desktop\\\\Subscribe\\\\frontend\\\\src\\\\PreferencesScreen.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { View, Text, Button, Picker, ActivityIndicator, Alert, StyleSheet } from 'react-native';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PreferencesScreen = () => {\n  _s();\n  const [notifications, setNotifications] = useState('in-app');\n  const [loading, setLoading] = useState(false);\n  const handleUpdatePreferences = async () => {\n    setLoading(true);\n    try {\n      await axios.put('https://subscription-cyan.vercel.app/api/auth/profile', {\n        preferences: {\n          notifications\n        }\n      });\n      Alert.alert('Success', 'Preferences updated successfully');\n    } catch (error) {\n      Alert.alert('Error', 'Failed to update preferences. Please try again later.');\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // Optionally, you could fetch existing preferences here\n  // useEffect(() => {\n  //     const fetchPreferences = async () => {\n  //         try {\n  //             const response = await axios.get('https://your-api-endpoint');\n  //             setNotifications(response.data.preferences.notifications);\n  //         } catch (error) {\n  //             console.error('Failed to fetch preferences', error);\n  //         }\n  //     };\n  //     fetchPreferences();\n  // }, []);\n\n  return /*#__PURE__*/_jsxDEV(View, {\n    style: styles.container,\n    children: [/*#__PURE__*/_jsxDEV(Text, {\n      style: styles.title,\n      children: \"Notification Preferences\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Picker, {\n      selectedValue: notifications,\n      onValueChange: itemValue => setNotifications(itemValue),\n      style: styles.picker,\n      children: [/*#__PURE__*/_jsxDEV(Picker.Item, {\n        label: \"In-App\",\n        value: \"in-app\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Picker.Item, {\n        label: \"Email\",\n        value: \"email\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      title: \"Update Preferences\",\n      onPress: handleUpdatePreferences\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 13\n    }, this), loading && /*#__PURE__*/_jsxDEV(ActivityIndicator, {\n      size: \"large\",\n      color: \"#0000ff\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 25\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 9\n  }, this);\n};\n_s(PreferencesScreen, \"+8oH6QWtcgrGcRz2gbUxrOJXAN0=\");\n_c = PreferencesScreen;\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center',\n    padding: 20\n  },\n  title: {\n    fontSize: 24,\n    marginBottom: 20\n  },\n  picker: {\n    height: 50,\n    width: 200,\n    marginBottom: 20\n  }\n});\nexport default PreferencesScreen;\nvar _c;\n$RefreshReg$(_c, \"PreferencesScreen\");","map":{"version":3,"names":["React","useState","useEffect","View","Text","Button","Picker","ActivityIndicator","Alert","StyleSheet","axios","jsxDEV","_jsxDEV","PreferencesScreen","_s","notifications","setNotifications","loading","setLoading","handleUpdatePreferences","put","preferences","alert","error","style","styles","container","children","title","fileName","_jsxFileName","lineNumber","columnNumber","selectedValue","onValueChange","itemValue","picker","Item","label","value","onPress","size","color","_c","create","flex","justifyContent","alignItems","padding","fontSize","marginBottom","height","width","$RefreshReg$"],"sources":["C:/Users/SIVANAND/OneDrive - Capgemini/Desktop/Subscribe/frontend/src/PreferencesScreen.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { View, Text, Button, Picker, ActivityIndicator, Alert, StyleSheet } from 'react-native';\r\nimport axios from 'axios';\r\n\r\nconst PreferencesScreen = () => {\r\n    const [notifications, setNotifications] = useState('in-app');\r\n    const [loading, setLoading] = useState(false);\r\n\r\n    const handleUpdatePreferences = async () => {\r\n        setLoading(true);\r\n        try {\r\n            await axios.put('https://subscription-cyan.vercel.app/api/auth/profile', {\r\n                preferences: { notifications }\r\n            });\r\n            Alert.alert('Success', 'Preferences updated successfully');\r\n        } catch (error) {\r\n            Alert.alert('Error', 'Failed to update preferences. Please try again later.');\r\n        } finally {\r\n            setLoading(false);\r\n        }\r\n    };\r\n\r\n    // Optionally, you could fetch existing preferences here\r\n    // useEffect(() => {\r\n    //     const fetchPreferences = async () => {\r\n    //         try {\r\n    //             const response = await axios.get('https://your-api-endpoint');\r\n    //             setNotifications(response.data.preferences.notifications);\r\n    //         } catch (error) {\r\n    //             console.error('Failed to fetch preferences', error);\r\n    //         }\r\n    //     };\r\n    //     fetchPreferences();\r\n    // }, []);\r\n\r\n    return (\r\n        <View style={styles.container}>\r\n            <Text style={styles.title}>Notification Preferences</Text>\r\n            <Picker\r\n                selectedValue={notifications}\r\n                onValueChange={(itemValue) => setNotifications(itemValue)}\r\n                style={styles.picker}\r\n            >\r\n                <Picker.Item label=\"In-App\" value=\"in-app\" />\r\n                <Picker.Item label=\"Email\" value=\"email\" />\r\n            </Picker>\r\n            <Button title=\"Update Preferences\" onPress={handleUpdatePreferences} />\r\n            {loading && <ActivityIndicator size=\"large\" color=\"#0000ff\" />}\r\n        </View>\r\n    );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n    container: {\r\n        flex: 1,\r\n        justifyContent: 'center',\r\n        alignItems: 'center',\r\n        padding: 20,\r\n    },\r\n    title: {\r\n        fontSize: 24,\r\n        marginBottom: 20,\r\n    },\r\n    picker: {\r\n        height: 50,\r\n        width: 200,\r\n        marginBottom: 20,\r\n    },\r\n});\r\n\r\nexport default PreferencesScreen;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}