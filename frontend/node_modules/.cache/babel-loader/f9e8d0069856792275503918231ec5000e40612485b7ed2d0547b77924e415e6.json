{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\SIVANAND\\\\OneDrive - Capgemini\\\\Desktop\\\\Subscribe\\\\frontend\\\\src\\\\NotificationScreen.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { View, Text, FlatList, Button } from 'react-native';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst NotificationScreen = () => {\n  _s();\n  const [notifications, setNotifications] = useState([]);\n  const fetchNotifications = async () => {\n    const response = await axios.get('http://localhost:5000/api/notifications'); // Create this endpoint\n    setNotifications(response.data);\n  };\n  useEffect(() => {\n    fetchNotifications();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(View, {\n    children: [/*#__PURE__*/_jsxDEV(Text, {\n      children: \"Your Notifications\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(FlatList, {\n      data: notifications,\n      keyExtractor: item => item._id,\n      renderItem: _ref => {\n        let {\n          item\n        } = _ref;\n        return /*#__PURE__*/_jsxDEV(View, {\n          children: [/*#__PURE__*/_jsxDEV(Text, {\n            children: item.message\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 25,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            title: \"Mark as Read\",\n            onPress: () => {/* Logic to mark as read */}\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 26,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 21\n        }, this);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 9\n  }, this);\n};\n_s(NotificationScreen, \"6gMUc0OfbF4zJu51/S5RmKCczuA=\");\n_c = NotificationScreen;\nexport default NotificationScreen;\nvar _c;\n$RefreshReg$(_c, \"NotificationScreen\");","map":{"version":3,"names":["React","useEffect","useState","View","Text","FlatList","Button","axios","jsxDEV","_jsxDEV","NotificationScreen","_s","notifications","setNotifications","fetchNotifications","response","get","data","children","fileName","_jsxFileName","lineNumber","columnNumber","keyExtractor","item","_id","renderItem","_ref","message","title","onPress","_c","$RefreshReg$"],"sources":["C:/Users/SIVANAND/OneDrive - Capgemini/Desktop/Subscribe/frontend/src/NotificationScreen.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { View, Text, FlatList, Button } from 'react-native';\r\nimport axios from 'axios';\r\n\r\nconst NotificationScreen = () => {\r\n    const [notifications, setNotifications] = useState([]);\r\n\r\n    const fetchNotifications = async () => {\r\n        const response = await axios.get('http://localhost:5000/api/notifications'); // Create this endpoint\r\n        setNotifications(response.data);\r\n    };\r\n\r\n    useEffect(() => {\r\n        fetchNotifications();\r\n    }, []);\r\n\r\n    return (\r\n        <View>\r\n            <Text>Your Notifications</Text>\r\n            <FlatList\r\n                data={notifications}\r\n                keyExtractor={(item) => item._id}\r\n                renderItem={({ item }) => (\r\n                    <View>\r\n                        <Text>{item.message}</Text>\r\n                        <Button title=\"Mark as Read\" onPress={() => {/* Logic to mark as read */}} />\r\n                    </View>\r\n                )}\r\n            />\r\n        </View>\r\n    );\r\n};\r\n\r\nexport default NotificationScreen;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,SAASC,IAAI,EAAEC,IAAI,EAAEC,QAAQ,EAAEC,MAAM,QAAQ,cAAc;AAC3D,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,MAAMC,kBAAkB,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC7B,MAAM,CAACC,aAAa,EAAEC,gBAAgB,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;EAEtD,MAAMY,kBAAkB,GAAG,MAAAA,CAAA,KAAY;IACnC,MAAMC,QAAQ,GAAG,MAAMR,KAAK,CAACS,GAAG,CAAC,yCAAyC,CAAC,CAAC,CAAC;IAC7EH,gBAAgB,CAACE,QAAQ,CAACE,IAAI,CAAC;EACnC,CAAC;EAEDhB,SAAS,CAAC,MAAM;IACZa,kBAAkB,CAAC,CAAC;EACxB,CAAC,EAAE,EAAE,CAAC;EAEN,oBACIL,OAAA,CAACN,IAAI;IAAAe,QAAA,gBACDT,OAAA,CAACL,IAAI;MAAAc,QAAA,EAAC;IAAkB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAM,CAAC,eAC/Bb,OAAA,CAACJ,QAAQ;MACLY,IAAI,EAAEL,aAAc;MACpBW,YAAY,EAAGC,IAAI,IAAKA,IAAI,CAACC,GAAI;MACjCC,UAAU,EAAEC,IAAA;QAAA,IAAC;UAAEH;QAAK,CAAC,GAAAG,IAAA;QAAA,oBACjBlB,OAAA,CAACN,IAAI;UAAAe,QAAA,gBACDT,OAAA,CAACL,IAAI;YAAAc,QAAA,EAAEM,IAAI,CAACI;UAAO;YAAAT,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAO,CAAC,eAC3Bb,OAAA,CAACH,MAAM;YAACuB,KAAK,EAAC,cAAc;YAACC,OAAO,EAAEA,CAAA,KAAM,CAAC;UAA6B;YAAAX,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAC3E,CAAC;MAAA;IACT;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACL,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACA,CAAC;AAEf,CAAC;AAACX,EAAA,CA3BID,kBAAkB;AAAAqB,EAAA,GAAlBrB,kBAAkB;AA6BxB,eAAeA,kBAAkB;AAAC,IAAAqB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}