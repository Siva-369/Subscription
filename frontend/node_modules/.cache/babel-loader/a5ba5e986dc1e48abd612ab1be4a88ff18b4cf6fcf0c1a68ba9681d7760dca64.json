{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\SIVANAND\\\\OneDrive - Capgemini\\\\Desktop\\\\Subscribe\\\\frontend\\\\src\\\\ProfileScreen.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { View, TextInput, Button, Alert } from 'react-native';\nimport axios from 'axios';\nimport { setAuthToken } from './axiosConfig';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ProfileScreen = () => {\n  _s();\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const fetchProfile = async () => {\n    const response = await axios.get('https://your-backend-url/api/auth/profile');\n    setEmail(response.data.email);\n  };\n  const handleUpdateProfile = async () => {\n    try {\n      await axios.put('https://your-backend-url/api/auth/profile', {\n        email,\n        password\n      });\n      Alert.alert('Success', 'Profile updated successfully');\n    } catch (error) {\n      Alert.alert('Error', 'Failed to update profile');\n    }\n  };\n  useEffect(() => {\n    fetchProfile();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(View, {\n    children: [/*#__PURE__*/_jsxDEV(TextInput, {\n      placeholder: \"Email\",\n      value: email,\n      onChangeText: setEmail\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(TextInput, {\n      placeholder: \"New Password\",\n      secureTextEntry: true,\n      value: password,\n      onChangeText: setPassword\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      title: \"Update Profile\",\n      onPress: handleUpdateProfile\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 9\n  }, this);\n};\n_s(ProfileScreen, \"Azh4nDFCECfuvkgNaiGV+xdRyGQ=\");\n_c = ProfileScreen;\nexport default ProfileScreen;\nvar _c;\n$RefreshReg$(_c, \"ProfileScreen\");","map":{"version":3,"names":["React","useState","useEffect","View","TextInput","Button","Alert","axios","setAuthToken","jsxDEV","_jsxDEV","ProfileScreen","_s","email","setEmail","password","setPassword","fetchProfile","response","get","data","handleUpdateProfile","put","alert","error","children","placeholder","value","onChangeText","fileName","_jsxFileName","lineNumber","columnNumber","secureTextEntry","title","onPress","_c","$RefreshReg$"],"sources":["C:/Users/SIVANAND/OneDrive - Capgemini/Desktop/Subscribe/frontend/src/ProfileScreen.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { View, TextInput, Button, Alert } from 'react-native';\r\nimport axios from 'axios';\r\nimport { setAuthToken } from './axiosConfig';\r\n\r\nconst ProfileScreen = () => {\r\n    const [email, setEmail] = useState('');\r\n    const [password, setPassword] = useState('');\r\n\r\n    const fetchProfile = async () => {\r\n        const response = await axios.get('https://your-backend-url/api/auth/profile');\r\n        setEmail(response.data.email);\r\n    };\r\n\r\n    const handleUpdateProfile = async () => {\r\n        try {\r\n            await axios.put('https://your-backend-url/api/auth/profile', { email, password });\r\n            Alert.alert('Success', 'Profile updated successfully');\r\n        } catch (error) {\r\n            Alert.alert('Error', 'Failed to update profile');\r\n        }\r\n    };\r\n\r\n    useEffect(() => {\r\n        fetchProfile();\r\n    }, []);\r\n\r\n    return (\r\n        <View>\r\n            <TextInput placeholder=\"Email\" value={email} onChangeText={setEmail} />\r\n            <TextInput placeholder=\"New Password\" secureTextEntry value={password} onChangeText={setPassword} />\r\n            <Button title=\"Update Profile\" onPress={handleUpdateProfile} />\r\n        </View>\r\n    );\r\n};\r\n\r\nexport default ProfileScreen;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,IAAI,EAAEC,SAAS,EAAEC,MAAM,EAAEC,KAAK,QAAQ,cAAc;AAC7D,OAAOC,KAAK,MAAM,OAAO;AACzB,SAASC,YAAY,QAAQ,eAAe;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE7C,MAAMC,aAAa,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACxB,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGb,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACc,QAAQ,EAAEC,WAAW,CAAC,GAAGf,QAAQ,CAAC,EAAE,CAAC;EAE5C,MAAMgB,YAAY,GAAG,MAAAA,CAAA,KAAY;IAC7B,MAAMC,QAAQ,GAAG,MAAMX,KAAK,CAACY,GAAG,CAAC,2CAA2C,CAAC;IAC7EL,QAAQ,CAACI,QAAQ,CAACE,IAAI,CAACP,KAAK,CAAC;EACjC,CAAC;EAED,MAAMQ,mBAAmB,GAAG,MAAAA,CAAA,KAAY;IACpC,IAAI;MACA,MAAMd,KAAK,CAACe,GAAG,CAAC,2CAA2C,EAAE;QAAET,KAAK;QAAEE;MAAS,CAAC,CAAC;MACjFT,KAAK,CAACiB,KAAK,CAAC,SAAS,EAAE,8BAA8B,CAAC;IAC1D,CAAC,CAAC,OAAOC,KAAK,EAAE;MACZlB,KAAK,CAACiB,KAAK,CAAC,OAAO,EAAE,0BAA0B,CAAC;IACpD;EACJ,CAAC;EAEDrB,SAAS,CAAC,MAAM;IACZe,YAAY,CAAC,CAAC;EAClB,CAAC,EAAE,EAAE,CAAC;EAEN,oBACIP,OAAA,CAACP,IAAI;IAAAsB,QAAA,gBACDf,OAAA,CAACN,SAAS;MAACsB,WAAW,EAAC,OAAO;MAACC,KAAK,EAAEd,KAAM;MAACe,YAAY,EAAEd;IAAS;MAAAe,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACvEtB,OAAA,CAACN,SAAS;MAACsB,WAAW,EAAC,cAAc;MAACO,eAAe;MAACN,KAAK,EAAEZ,QAAS;MAACa,YAAY,EAAEZ;IAAY;MAAAa,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACpGtB,OAAA,CAACL,MAAM;MAAC6B,KAAK,EAAC,gBAAgB;MAACC,OAAO,EAAEd;IAAoB;MAAAQ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC7D,CAAC;AAEf,CAAC;AAACpB,EAAA,CA7BID,aAAa;AAAAyB,EAAA,GAAbzB,aAAa;AA+BnB,eAAeA,aAAa;AAAC,IAAAyB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}