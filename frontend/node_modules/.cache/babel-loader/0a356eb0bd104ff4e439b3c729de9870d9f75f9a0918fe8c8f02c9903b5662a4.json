{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\SIVANAND\\\\OneDrive - Capgemini\\\\Desktop\\\\Subscribe\\\\frontend\\\\src\\\\DashboardScreen.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { View, Text, Button, FlatList, TextInput } from 'react-native';\nimport axios from 'axios';\nimport { Alert } from 'react-native';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst DashboardScreen = () => {\n  _s();\n  const [subscriptions, setSubscriptions] = useState([]);\n  const [searchQuery, setSearchQuery] = useState('');\n  const fetchSubscriptions = async () => {\n    const response = await axios.get('http://localhost:5000/api/subscriptions');\n    setSubscriptions(response.data);\n  };\n  const handleInviteUser = async subscriptionId => {\n    const userId = 'user_id_to_invite'; // Replace with actual user ID logic\n    try {\n      await axios.post(`http://localhost:5000/api/subscriptions/${subscriptionId}/invite`, {\n        userId\n      });\n      Alert.alert('Success', 'User invited to share subscription');\n    } catch (error) {\n      Alert.alert('Error', 'Failed to invite user');\n    }\n  };\n  const handleTrackUsage = async subscriptionId => {\n    const userId = 'user_id_to_track'; // Replace with actual user ID logic\n    try {\n      await axios.post(`http://localhost:5000/api/subscriptions/${subscriptionId}/track`, {\n        userId\n      });\n      Alert.alert('Success', 'Usage tracked');\n    } catch (error) {\n      Alert.alert('Error', 'Failed to track usage');\n    }\n  };\n  useEffect(() => {\n    fetchSubscriptions();\n  }, []);\n  const filteredSubscriptions = subscriptions.filter(subscription => subscription.name.toLowerCase().includes(searchQuery.toLowerCase()));\n  return /*#__PURE__*/_jsxDEV(View, {\n    children: [/*#__PURE__*/_jsxDEV(TextInput, {\n      placeholder: \"Search Subscriptions\",\n      value: searchQuery,\n      onChangeText: setSearchQuery\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(FlatList, {\n      data: filteredSubscriptions,\n      keyExtractor: item => item._id,\n      renderItem: _ref => {\n        let {\n          item\n        } = _ref;\n        return /*#__PURE__*/_jsxDEV(View, {\n          children: [/*#__PURE__*/_jsxDEV(Text, {\n            children: [item.name, \" - $\", item.cost]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            title: \"Track Usage\",\n            onPress: () => handleTrackUsage(item._id)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            title: \"Invite User\",\n            onPress: () => handleInviteUser(item._id)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 21\n        }, this);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      title: \"Add Subscription\",\n      onPress: () => navigation.navigate('AddSubscription')\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 9\n  }, this);\n};\n_s(DashboardScreen, \"+7G0chj3d3aL+EWMedvrUE82D04=\");\n_c = DashboardScreen;\nexport default DashboardScreen;\nvar _c;\n$RefreshReg$(_c, \"DashboardScreen\");","map":{"version":3,"names":["React","useEffect","useState","View","Text","Button","FlatList","TextInput","axios","Alert","jsxDEV","_jsxDEV","DashboardScreen","_s","subscriptions","setSubscriptions","searchQuery","setSearchQuery","fetchSubscriptions","response","get","data","handleInviteUser","subscriptionId","userId","post","alert","error","handleTrackUsage","filteredSubscriptions","filter","subscription","name","toLowerCase","includes","children","placeholder","value","onChangeText","fileName","_jsxFileName","lineNumber","columnNumber","keyExtractor","item","_id","renderItem","_ref","cost","title","onPress","navigation","navigate","_c","$RefreshReg$"],"sources":["C:/Users/SIVANAND/OneDrive - Capgemini/Desktop/Subscribe/frontend/src/DashboardScreen.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { View, Text, Button, FlatList, TextInput } from 'react-native';\r\nimport axios from 'axios';\r\nimport { Alert } from 'react-native';\r\n\r\nconst DashboardScreen = () => {\r\n    const [subscriptions, setSubscriptions] = useState([]);\r\n    const [searchQuery, setSearchQuery] = useState('');\r\n\r\n    const fetchSubscriptions = async () => {\r\n        const response = await axios.get('http://localhost:5000/api/subscriptions');\r\n        setSubscriptions(response.data);\r\n    };\r\n\r\n    const handleInviteUser = async (subscriptionId) => {\r\n        const userId = 'user_id_to_invite'; // Replace with actual user ID logic\r\n        try {\r\n            await axios.post(`http://localhost:5000/api/subscriptions/${subscriptionId}/invite`, { userId });\r\n            Alert.alert('Success', 'User invited to share subscription');\r\n        } catch (error) {\r\n            Alert.alert('Error', 'Failed to invite user');\r\n        }\r\n    };\r\n\r\n    const handleTrackUsage = async (subscriptionId) => {\r\n        const userId = 'user_id_to_track'; // Replace with actual user ID logic\r\n        try {\r\n            await axios.post(`http://localhost:5000/api/subscriptions/${subscriptionId}/track`, { userId });\r\n            Alert.alert('Success', 'Usage tracked');\r\n        } catch (error) {\r\n            Alert.alert('Error', 'Failed to track usage');\r\n        }\r\n    };\r\n\r\n    useEffect(() => {\r\n        fetchSubscriptions();\r\n    }, []);\r\n\r\n    const filteredSubscriptions = subscriptions.filter(subscription =>\r\n        subscription.name.toLowerCase().includes(searchQuery.toLowerCase())\r\n    );\r\n\r\n    return (\r\n        <View>\r\n            <TextInput\r\n                placeholder=\"Search Subscriptions\"\r\n                value={searchQuery}\r\n                onChangeText={setSearchQuery}\r\n            />\r\n            <FlatList\r\n                data={filteredSubscriptions}\r\n                keyExtractor={(item) => item._id}\r\n                renderItem={({ item }) => (\r\n                    <View>\r\n                        <Text>{item.name} - ${item.cost}</Text>\r\n                        <Button title=\"Track Usage\" onPress={() => handleTrackUsage(item._id)} />\r\n                        <Button title=\"Invite User\" onPress={() => handleInviteUser(item._id)} />\r\n                    </View>\r\n                )}\r\n            />\r\n            <Button title=\"Add Subscription\" onPress={() => navigation.navigate('AddSubscription')} />\r\n        </View>\r\n    );\r\n};\r\n\r\nexport default DashboardScreen;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}