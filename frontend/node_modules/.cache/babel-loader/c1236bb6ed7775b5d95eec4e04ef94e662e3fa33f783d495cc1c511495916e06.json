{"ast":null,"code":"import React,{useEffect,useState}from'react';import{View,Text,Button,FlatList,TextInput}from'react-native';import axios from'axios';import{Alert}from'react-native';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const DashboardScreen=()=>{const[subscriptions,setSubscriptions]=useState([]);const[searchQuery,setSearchQuery]=useState('');const fetchSubscriptions=async()=>{const response=await axios.get('https://your-backend-url/api/subscriptions');setSubscriptions(response.data);};const handleInviteUser=async subscriptionId=>{const userId='user_id_to_invite';// Replace with actual user ID logic\ntry{await axios.post(`http://your-backend-url/api/subscriptions/${subscriptionId}/invite`,{userId});Alert.alert('Success','User invited to share subscription');}catch(error){Alert.alert('Error','Failed to invite user');}};const handleTrackUsage=async subscriptionId=>{const userId='user_id_to_track';// Replace with actual user ID logic\ntry{await axios.post(`http://your-backend-url/api/subscriptions/${subscriptionId}/track`,{userId});Alert.alert('Success','Usage tracked');}catch(error){Alert.alert('Error','Failed to track usage');}};useEffect(()=>{fetchSubscriptions();},[]);const filteredSubscriptions=subscriptions.filter(subscription=>subscription.name.toLowerCase().includes(searchQuery.toLowerCase()));return/*#__PURE__*/_jsxs(View,{children:[/*#__PURE__*/_jsx(TextInput,{placeholder:\"Search Subscriptions\",value:searchQuery,onChangeText:setSearchQuery}),/*#__PURE__*/_jsx(FlatList,{data:filteredSubscriptions,keyExtractor:item=>item._id,renderItem:_ref=>{let{item}=_ref;return/*#__PURE__*/_jsxs(View,{children:[/*#__PURE__*/_jsxs(Text,{children:[item.name,\" - $\",item.cost]}),/*#__PURE__*/_jsx(Button,{title:\"Track Usage\",onPress:()=>handleTrackUsage(item._id)}),/*#__PURE__*/_jsx(Button,{title:\"Invite User\",onPress:()=>handleInviteUser(item._id)})]});}}),/*#__PURE__*/_jsx(Button,{title:\"Add Subscription\",onPress:()=>{/* Navigate to Add Subscription Screen */}})]});};export default DashboardScreen;","map":{"version":3,"names":["React","useEffect","useState","View","Text","Button","FlatList","TextInput","axios","Alert","jsx","_jsx","jsxs","_jsxs","DashboardScreen","subscriptions","setSubscriptions","searchQuery","setSearchQuery","fetchSubscriptions","response","get","data","handleInviteUser","subscriptionId","userId","post","alert","error","handleTrackUsage","filteredSubscriptions","filter","subscription","name","toLowerCase","includes","children","placeholder","value","onChangeText","keyExtractor","item","_id","renderItem","_ref","cost","title","onPress"],"sources":["C:/Users/SIVANAND/OneDrive - Capgemini/Desktop/Subscribe/frontend/src/DashboardScreen.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { View, Text, Button, FlatList, TextInput } from 'react-native';\r\nimport axios from 'axios';\r\nimport { Alert } from 'react-native';\r\n\r\nconst DashboardScreen = () => {\r\n    const [subscriptions, setSubscriptions] = useState([]);\r\n    const [searchQuery, setSearchQuery] = useState('');\r\n\r\n    const fetchSubscriptions = async () => {\r\n        const response = await axios.get('https://your-backend-url/api/subscriptions');\r\n        setSubscriptions(response.data);\r\n    };\r\n\r\n    const handleInviteUser = async (subscriptionId) => {\r\n        const userId = 'user_id_to_invite'; // Replace with actual user ID logic\r\n        try {\r\n            await axios.post(`http://your-backend-url/api/subscriptions/${subscriptionId}/invite`, { userId });\r\n            Alert.alert('Success', 'User invited to share subscription');\r\n        } catch (error) {\r\n            Alert.alert('Error', 'Failed to invite user');\r\n        }\r\n    };\r\n\r\n    const handleTrackUsage = async (subscriptionId) => {\r\n        const userId = 'user_id_to_track'; // Replace with actual user ID logic\r\n        try {\r\n            await axios.post(`http://your-backend-url/api/subscriptions/${subscriptionId}/track`, { userId });\r\n            Alert.alert('Success', 'Usage tracked');\r\n        } catch (error) {\r\n            Alert.alert('Error', 'Failed to track usage');\r\n        }\r\n    };\r\n\r\n    useEffect(() => {\r\n        fetchSubscriptions();\r\n    }, []);\r\n\r\n    const filteredSubscriptions = subscriptions.filter(subscription =>\r\n        subscription.name.toLowerCase().includes(searchQuery.toLowerCase())\r\n    );\r\n\r\n    return (\r\n        <View>\r\n            <TextInput\r\n                placeholder=\"Search Subscriptions\"\r\n                value={searchQuery}\r\n                onChangeText={setSearchQuery}\r\n            />\r\n            <FlatList\r\n                data={filteredSubscriptions}\r\n                keyExtractor={(item) => item._id}\r\n                renderItem={({ item }) => (\r\n                    <View>\r\n                        <Text>{item.name} - ${item.cost}</Text>\r\n                        <Button title=\"Track Usage\" onPress={() => handleTrackUsage(item._id)} />\r\n                        <Button title=\"Invite User\" onPress={() => handleInviteUser(item._id)} />\r\n                    </View>\r\n                )}\r\n            />\r\n            <Button title=\"Add Subscription\" onPress={() => {/* Navigate to Add Subscription Screen */}} />\r\n        </View>\r\n    );\r\n};\r\n\r\nexport default DashboardScreen;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}