{"ast":null,"code":"import React,{useState,useEffect}from'react';import{View,Text,Button,Picker}from'react-native';import axios from'axios';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const PreferencesScreen=()=>{const[notifications,setNotifications]=useState('in-app');const handleUpdatePreferences=async()=>{await axios.put('http://your-backend-url/api/auth/profile',{preferences:{notifications}});alert('Preferences updated successfully');};return/*#__PURE__*/_jsxs(View,{children:[/*#__PURE__*/_jsx(Text,{children:\"Notification Preferences\"}),/*#__PURE__*/_jsxs(Picker,{selectedValue:notifications,onValueChange:itemValue=>setNotifications(itemValue),children:[/*#__PURE__*/_jsx(Picker.Item,{label:\"In-App\",value:\"in-app\"}),/*#__PURE__*/_jsx(Picker.Item,{label:\"Email\",value:\"email\"})]}),/*#__PURE__*/_jsx(Button,{title:\"Update Preferences\",onPress:handleUpdatePreferences})]});};export default PreferencesScreen;","map":{"version":3,"names":["React","useState","useEffect","View","Text","Button","Picker","axios","jsx","_jsx","jsxs","_jsxs","PreferencesScreen","notifications","setNotifications","handleUpdatePreferences","put","preferences","alert","children","selectedValue","onValueChange","itemValue","Item","label","value","title","onPress"],"sources":["C:/Users/SIVANAND/OneDrive - Capgemini/Desktop/Subscribe/frontend/src/PreferencesScreen.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { View, Text, Button, Picker } from 'react-native';\r\nimport axios from 'axios';\r\n\r\nconst PreferencesScreen = () => {\r\n    const [notifications, setNotifications] = useState('in-app');\r\n\r\n    const handleUpdatePreferences = async () => {\r\n        await axios.put('http://your-backend-url/api/auth/profile', { preferences: { notifications } });\r\n        alert('Preferences updated successfully');\r\n    };\r\n\r\n    return (\r\n        <View>\r\n            <Text>Notification Preferences</Text>\r\n            <Picker selectedValue={notifications} onValueChange={(itemValue) => setNotifications(itemValue)}>\r\n                <Picker.Item label=\"In-App\" value=\"in-app\" />\r\n                <Picker.Item label=\"Email\" value=\"email\" />\r\n            </Picker>\r\n            <Button title=\"Update Preferences\" onPress={handleUpdatePreferences} />\r\n        </View>\r\n    );\r\n};\r\n\r\nexport default PreferencesScreen;"],"mappings":"AAAA,MAAO,CAAAA,KAAK,EAAIC,QAAQ,CAAEC,SAAS,KAAQ,OAAO,CAClD,OAASC,IAAI,CAAEC,IAAI,CAAEC,MAAM,CAAEC,MAAM,KAAQ,cAAc,CACzD,MAAO,CAAAC,KAAK,KAAM,OAAO,CAAC,OAAAC,GAAA,IAAAC,IAAA,CAAAC,IAAA,IAAAC,KAAA,yBAE1B,KAAM,CAAAC,iBAAiB,CAAGA,CAAA,GAAM,CAC5B,KAAM,CAACC,aAAa,CAAEC,gBAAgB,CAAC,CAAGb,QAAQ,CAAC,QAAQ,CAAC,CAE5D,KAAM,CAAAc,uBAAuB,CAAG,KAAAA,CAAA,GAAY,CACxC,KAAM,CAAAR,KAAK,CAACS,GAAG,CAAC,0CAA0C,CAAE,CAAEC,WAAW,CAAE,CAAEJ,aAAc,CAAE,CAAC,CAAC,CAC/FK,KAAK,CAAC,kCAAkC,CAAC,CAC7C,CAAC,CAED,mBACIP,KAAA,CAACR,IAAI,EAAAgB,QAAA,eACDV,IAAA,CAACL,IAAI,EAAAe,QAAA,CAAC,0BAAwB,CAAM,CAAC,cACrCR,KAAA,CAACL,MAAM,EAACc,aAAa,CAAEP,aAAc,CAACQ,aAAa,CAAGC,SAAS,EAAKR,gBAAgB,CAACQ,SAAS,CAAE,CAAAH,QAAA,eAC5FV,IAAA,CAACH,MAAM,CAACiB,IAAI,EAACC,KAAK,CAAC,QAAQ,CAACC,KAAK,CAAC,QAAQ,CAAE,CAAC,cAC7ChB,IAAA,CAACH,MAAM,CAACiB,IAAI,EAACC,KAAK,CAAC,OAAO,CAACC,KAAK,CAAC,OAAO,CAAE,CAAC,EACvC,CAAC,cACThB,IAAA,CAACJ,MAAM,EAACqB,KAAK,CAAC,oBAAoB,CAACC,OAAO,CAAEZ,uBAAwB,CAAE,CAAC,EACrE,CAAC,CAEf,CAAC,CAED,cAAe,CAAAH,iBAAiB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}